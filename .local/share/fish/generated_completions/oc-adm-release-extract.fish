# oc-adm-release-extract
# Autogenerated from man page /usr/lib/jvm/default/man/man1/oc-adm-release-extract.1.gz
complete -c oc-adm-release-extract -l cloud -d '    Specify the cloud for which credential request manifests should be extrac…'
complete -c oc-adm-release-extract -l command -d '    Specify \'oc\' or \'openshift-install\' to extract the client for your operat…'
complete -c oc-adm-release-extract -l command-os -d '    Override which operating system command is extracted (mac, windows, linux)'
complete -c oc-adm-release-extract -l credentials-requests -d '    Extract credential request manifests only'
complete -c oc-adm-release-extract -l dir -d '    The directory on disk that file:// images will be copied under'
complete -c oc-adm-release-extract -l file -d '    Extract a single file from the payload to standard output'
complete -c oc-adm-release-extract -l from -d '    Image containing the release payload'
complete -c oc-adm-release-extract -l git -d '    Check out the sources that created this release into the provided dir'
complete -c oc-adm-release-extract -l insecure -d '    Allow push and pull operations to registries to be made over HTTP'
complete -c oc-adm-release-extract -l max-per-registry -d '    Number of concurrent requests allowed per registry'
complete -c oc-adm-release-extract -s o -l output -d '    Output format.  Supports \'commit\' when used with \'--git\''
complete -c oc-adm-release-extract -s a -l registry-config -d '    Path to your registry credentials (defaults to  /. docker/config. json)'
complete -c oc-adm-release-extract -l signing-key -d '    Sign the sha256sum. txt generated by --tools with this GPG key'
complete -c oc-adm-release-extract -l skip-verification -d '    Skip verifying the integrity of the retrieved content'
complete -c oc-adm-release-extract -l to -d '    Directory to write release contents to, defaults to the current directory'
complete -c oc-adm-release-extract -l tools -d '    Extract the tools archives from the release image'
complete -c oc-adm-release-extract -l as -d '    Username to impersonate for the operation'
complete -c oc-adm-release-extract -l as-group -d '    Group to impersonate for the operation, this flag can be repeated to spec…'
complete -c oc-adm-release-extract -l cache-dir -d '    Default cache directory'
complete -c oc-adm-release-extract -l certificate-authority -d '    Path to a cert file for the certificate authority'
complete -c oc-adm-release-extract -l client-certificate -d '    Path to a client certificate file for TLS'
complete -c oc-adm-release-extract -l client-key -d '    Path to a client key file for TLS'
complete -c oc-adm-release-extract -l cluster -d '    The name of the kubeconfig cluster to use'
complete -c oc-adm-release-extract -l context -d '    The name of the kubeconfig context to use'
complete -c oc-adm-release-extract -l insecure-skip-tls-verify -d '    If true, the server\'s certificate will not be checked for validity'
complete -c oc-adm-release-extract -l kubeconfig -d '    Path to the kubeconfig file to use for CLI requests'
complete -c oc-adm-release-extract -l match-server-version -d '    Require server version to match client version'
complete -c oc-adm-release-extract -s n -l namespace -d '    If present, the namespace scope for this CLI request'
complete -c oc-adm-release-extract -l request-timeout -d '    The length of time to wait before giving up on a single server request'
complete -c oc-adm-release-extract -s s -l server -d '    The address and port of the Kubernetes API server'
complete -c oc-adm-release-extract -l tls-server-name -d '    Server name to use for server certificate validation'
complete -c oc-adm-release-extract -l token -d '    Bearer token for authentication to the API server'
complete -c oc-adm-release-extract -l user -d '    The name of the kubeconfig user to use EXAMPLE   # Use git to check out t…'

