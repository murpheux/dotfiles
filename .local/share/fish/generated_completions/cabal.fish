# cabal
# Autogenerated from man page /usr/lib/jvm/default/man/man1/cabal.1.gz
complete -c cabal -s V -l version -d 'Print version information'
complete -c cabal -l numeric-version -d 'Print just the version number'
complete -c cabal -l config-file -d FILE
complete -c cabal -l sandbox-config-file -d FILE
complete -c cabal -l default-user-config -d FILE
complete -c cabal -l require-sandbox
complete -c cabal -l no-require-sandbox -d 'requiring the presence of a sandbox for sandbox-aware commands'
complete -c cabal -l ignore-sandbox -d 'Ignore any existing sandbox'
complete -c cabal -l ignore-expiry -d 'Ignore expiry dates on signed metadata (use only in exceptional circumstances)'
complete -c cabal -l http-transport -d HttpTransport
complete -c cabal -l enable-nix
complete -c cabal -l disable-nix -d 'Nix integration: run commands through nix-shell if a \'shell. nix\' file exists'
complete -c cabal -l remote-repo -d NAME:URL
complete -c cabal -l local-no-index-repo -d NAME:PATH
complete -c cabal -l remote-repo-cache -d DIR
complete -c cabal -l local-repo -d DIR
complete -c cabal -l logs-dir -l logsdir -d DIR
complete -c cabal -l world-file -d FILE
complete -c cabal -l store-dir -l storedir -d DIR
complete -c cabal -s v -l verbose -d '[ n ]'
complete -c cabal -l installed -d 'Only print installed packages'
complete -c cabal -l simple-output -d 'Print in a easy-to-parse format'
complete -c cabal -l package-db -d DB
complete -c cabal -l dependencies -l deps -d 'Resolve and fetch dependencies (default)'
complete -c cabal -l no-dependencies -l no-deps -d 'Ignore dependencies'
complete -c cabal -l dry-run -d 'Do not install anything, only print what would be installed'
complete -c cabal -l enable-tests
complete -c cabal -l disable-tests -d 'dependency checking and compilation for test suites listed in the package des…'
complete -c cabal -l enable-benchmarks
complete -c cabal -l disable-benchmarks -d 'dependency checking and compilation for benchmarks listed in the package desc…'
complete -c cabal -l solver -d SOLVER
complete -c cabal -l max-backjumps -d NUM
complete -c cabal -l reorder-goals
complete -c cabal -l no-reorder-goals -d 'Try to reorder goals according to certain heuristics'
complete -c cabal -l count-conflicts
complete -c cabal -l no-count-conflicts -d 'Try to speed up solving by preferring goals that are involved in a lot of con…'
complete -c cabal -l fine-grained-conflicts
complete -c cabal -l no-fine-grained-conflicts -d 'Skip a version of a package if it does not resolve the conflicts encountered …'
complete -c cabal -l minimize-conflict-set
complete -c cabal -l no-minimize-conflict-set -d 'When there is no solution, try to improve the error message by finding a mini…'
complete -c cabal -l independent-goals
complete -c cabal -l no-independent-goals -d 'Treat several goals on the command line as independent'
complete -c cabal -l shadow-installed-packages
complete -c cabal -l no-shadow-installed-packages -d 'If multiple package instances of the same version are installed, treat all bu…'
complete -c cabal -l strong-flags
complete -c cabal -l no-strong-flags -d 'Do not defer flag choices (this used to be the default in cabal-install <= 1'
complete -c cabal -l allow-boot-library-installs
complete -c cabal -l no-allow-boot-library-installs -d 'Allow cabal to install base, ghc-prim, integer-simple, integer-gmp, and templ…'
complete -c cabal -l reject-unconstrained-dependencies -d none|all
complete -c cabal -s d -l destdir -d PATH
complete -c cabal -s s -l source-repository -d '[ [head|this|. ] ]'
complete -c cabal -l index-state -d STATE
complete -c cabal -l pristine -d 'Unpack the original pristine tarball, rather than updating the '
complete -c cabal -l publish
complete -c cabal -l documentation -d 'Upload documentation instead of a source package'
complete -c cabal -s u -l username -d USERNAME
complete -c cabal -s p -l password -d PASSWORD
complete -c cabal -s P -l password-command -d PASSWORD
complete -c cabal -s i -l interactive
complete -c cabal -s n -l non-interactive -d 'interactive mode'
complete -c cabal -s q -l quiet -d 'Do not generate log messages to stdout'
complete -c cabal -l no-comments -d 'Do not generate explanatory comments in the . cabal file'
complete -c cabal -s m -l minimal -d 'Generate a minimal . cabal file, that is, do not include extra empty fields'
complete -c cabal -l overwrite -d 'Overwrite any existing . cabal, LICENSE, or Setup. hs files without warning'
complete -c cabal -l package-dir -l packagedir -d DIRECTORY
complete -c cabal -l package-name -d PACKAGE
complete -c cabal -l cabal-version -d VERSION_RANGE
complete -c cabal -s l -l license -d LICENSE
complete -c cabal -s a -l author -d NAME
complete -c cabal -s e -l email -d EMAIL
complete -c cabal -l homepage -d URL
complete -c cabal -l synopsis -d TEXT
complete -c cabal -s c -l category -d CATEGORY
complete -c cabal -s x -l extra-source-file -d FILE
complete -c cabal -l lib -l is-library
complete -c cabal -l exe -l is-executable
complete -c cabal -l libandexe -l is-libandexe
complete -c cabal -l tests -d 'Generate a test suite for the library'
complete -c cabal -l test-dir -d DIR
complete -c cabal -l simple -d 'Create a simple project with sensible defaults'
complete -c cabal -l main-is -d FILE
complete -c cabal -l language -d LANGUAGE
complete -c cabal -s o -l expose-module -d MODULE
complete -c cabal -l extension -d EXTENSION
complete -c cabal -l dependency -d PACKAGE
complete -c cabal -l application-dir -d DIR
complete -c cabal -l source-dir -l sourcedir -d DIR
complete -c cabal -l build-tool -d TOOL
complete -c cabal -s w -l with-compiler -d PATH
complete -c cabal -s f
complete -c cabal -l force -d 'diff: Shows a pseudo-diff of the user\'s ~/'
complete -c cabal -l augment -d CONFIGLINE
complete -c cabal -l freeze-file -l v1-freeze-file -d 'Act on the freeze file'
complete -c cabal -l v2-freeze-file -l new-freeze-file -d 'Act on the new-style freeze file (default: cabal. project. freeze)'
complete -c cabal -l project-file -d PROJECTFILE
complete -c cabal -l exit-code -d 'Exit with non-zero when there are outdated dependencies'
complete -c cabal -l ignore -d PKGS
complete -c cabal -l minor -d '[ PKGS ]'
complete -c cabal -l builddir -l distdir -l distpref -d DIR
complete -c cabal -l executables -d 'Run hscolour for Executables targets'
complete -c cabal -l benchmarks -d 'Run hscolour for Benchmark targets'
complete -c cabal -l foreign-libraries -d 'Run hscolour for Foreign Library targets'
complete -c cabal -l all -d 'Run hscolour for all targets'
complete -c cabal -l css -d PATH
complete -c cabal -s g -l ghc
complete -c cabal -l ghcjs
complete -c cabal -l uhc
complete -c cabal -l haskell-suite
complete -c cabal -l cabal-file -d PATH
complete -c cabal -l with-hc-pkg -d PATH
complete -c cabal -l prefix -d DIR
complete -c cabal -l bindir -d DIR
complete -c cabal -l libdir -d DIR
complete -c cabal -l libsubdir -d DIR
complete -c cabal -l dynlibdir -d DIR
complete -c cabal -l libexecdir -d DIR
complete -c cabal -l libexecsubdir -d DIR
complete -c cabal -l datadir -d DIR
complete -c cabal -l datasubdir -d DIR
complete -c cabal -l docdir -d DIR
complete -c cabal -l htmldir -d DIR
complete -c cabal -l haddockdir -d DIR
complete -c cabal -l sysconfdir -d DIR
complete -c cabal -l program-prefix -d PREFIX
complete -c cabal -l program-suffix -d SUFFIX
complete -c cabal -l enable-library-vanilla
complete -c cabal -l disable-library-vanilla -d 'Vanilla libraries'
complete -c cabal -l enable-library-profiling
complete -c cabal -l disable-library-profiling -d 'Library profiling'
complete -c cabal -l enable-shared
complete -c cabal -l disable-shared -d 'Shared library'
complete -c cabal -l enable-static
complete -c cabal -l disable-static -d 'Static library'
complete -c cabal -l enable-executable-dynamic
complete -c cabal -l disable-executable-dynamic -d 'Executable dynamic linking'
complete -c cabal -l enable-executable-static
complete -c cabal -l disable-executable-static -d 'Executable fully static linking'
complete -c cabal -l enable-profiling
complete -c cabal -l disable-profiling -d 'Executable and library profiling'
complete -c cabal -l enable-executable-profiling
complete -c cabal -l disable-executable-profiling -d 'Executable profiling (DEPRECATED)'
complete -c cabal -l profiling-detail -d level
complete -c cabal -l library-profiling-detail -d level
complete -c cabal -s O -l enable-optimization -l enable-optimisation -d '[ n ]'
complete -c cabal -l disable-optimization -l disable-optimisation
complete -c cabal -l enable-debug-info -d '[ n ]'
complete -c cabal -l disable-debug-info
complete -c cabal -l enable-library-for-ghci
complete -c cabal -l disable-library-for-ghci -d 'compile library for use with GHCi'
complete -c cabal -l enable-split-sections
complete -c cabal -l disable-split-sections -d 'compile library code such that unneeded definitions can be dropped from the f…'
complete -c cabal -l enable-split-objs
complete -c cabal -l disable-split-objs -d 'split library into smaller objects to reduce binary sizes (GHC 6. 6+)'
complete -c cabal -l enable-executable-stripping
complete -c cabal -l disable-executable-stripping -d 'strip executables upon installation to reduce binary sizes'
complete -c cabal -l enable-library-stripping
complete -c cabal -l disable-library-stripping -d 'strip libraries upon installation to reduce binary sizes'
complete -c cabal -l configure-option -d OPT
complete -c cabal -l user
complete -c cabal -l global -d 'doing a per-user installation'
complete -c cabal -l flags -d FLAGS
complete -c cabal -l extra-include-dirs -d PATH
complete -c cabal -l enable-deterministic
complete -c cabal -l disable-deterministic -d 'Try to be as deterministic as possible (used by the test suite)'
complete -c cabal -l ipid -d IPID
complete -c cabal -l cid -d CID
complete -c cabal -l extra-lib-dirs -d PATH
complete -c cabal -l extra-framework-dirs -d PATH
complete -c cabal -l extra-prog-path -d PATH
complete -c cabal -l instantiate-with -d NAME=MOD
complete -c cabal -l enable-coverage
complete -c cabal -l disable-coverage -d 'build package with Haskell Program Coverage.  (GHC only)'
complete -c cabal -l enable-library-coverage
complete -c cabal -l disable-library-coverage -d 'build package with Haskell Program Coverage.  (GHC only) (DEPRECATED)'
complete -c cabal -l enable-relocatable
complete -c cabal -l disable-relocatable -d 'building a package that is relocatable.  (GHC only)'
complete -c cabal -l disable-response-files -d 'enable workaround for old versions of programs like "ar" that do not support …'
complete -c cabal -l allow-depending-on-private-libs -d 'Allow depending on private libraries'
complete -c cabal -l with-alex -d PATH
complete -c cabal -l with-ar -d PATH
complete -c cabal -l with-c2hs -d PATH
complete -c cabal -l with-cpphs -d PATH
complete -c cabal -l with-doctest -d PATH
complete -c cabal -l with-gcc -d PATH
complete -c cabal -l with-ghc -d PATH
complete -c cabal -l with-ghc-pkg -d PATH
complete -c cabal -l with-ghcjs -d PATH
complete -c cabal -l with-ghcjs-pkg -d PATH
complete -c cabal -l with-greencard -d PATH
complete -c cabal -l with-haddock -d PATH
complete -c cabal -l with-happy -d PATH
complete -c cabal -l with-haskell-suite -d PATH
complete -c cabal -l with-haskell-suite-pkg -d PATH
complete -c cabal -l with-hmake -d PATH
complete -c cabal -l with-hpc -d PATH
complete -c cabal -l with-hsc2hs -d PATH
complete -c cabal -l with-hscolour -d PATH
complete -c cabal -l with-jhc -d PATH
complete -c cabal -l with-ld -d PATH
complete -c cabal -l with-pkg-config -d PATH
complete -c cabal -l with-runghc -d PATH
complete -c cabal -l with-strip -d PATH
complete -c cabal -l with-tar -d PATH
complete -c cabal -l with-uhc -d PATH
complete -c cabal -l alex-option -d OPT
complete -c cabal -l ar-option -d OPT
complete -c cabal -l c2hs-option -d OPT
complete -c cabal -l cpphs-option -d OPT
complete -c cabal -l doctest-option -d OPT
complete -c cabal -l gcc-option -d OPT
complete -c cabal -l ghc-option -d OPT
complete -c cabal -l ghc-pkg-option -d OPT
complete -c cabal -l ghcjs-option -d OPT
complete -c cabal -l ghcjs-pkg-option -d OPT
complete -c cabal -l greencard-option -d OPT
complete -c cabal -l haddock-option -d OPT
complete -c cabal -l happy-option -d OPT
complete -c cabal -l haskell-suite-option -d OPT
complete -c cabal -l haskell-suite-pkg-option -d OPT
complete -c cabal -l hmake-option -d OPT
complete -c cabal -l hpc-option -d OPT
complete -c cabal -l hsc2hs-option -d OPT
complete -c cabal -l hscolour-option -d OPT
complete -c cabal -l jhc-option -d OPT
complete -c cabal -l ld-option -d OPT
complete -c cabal -l pkg-config-option -d OPT
complete -c cabal -l runghc-option -d OPT
complete -c cabal -l strip-option -d OPT
complete -c cabal -l tar-option -d OPT
complete -c cabal -l uhc-option -d OPT
complete -c cabal -l alex-options -d OPTS
complete -c cabal -l ar-options -d OPTS
complete -c cabal -l c2hs-options -d OPTS
complete -c cabal -l cpphs-options -d OPTS
complete -c cabal -l doctest-options -d OPTS
complete -c cabal -l gcc-options -d OPTS
complete -c cabal -l ghc-options -d OPTS
complete -c cabal -l ghc-pkg-options -d OPTS
complete -c cabal -l ghcjs-options -d OPTS
complete -c cabal -l ghcjs-pkg-options -d OPTS
complete -c cabal -l greencard-options -d OPTS
complete -c cabal -l haddock-options -d OPTS
complete -c cabal -l happy-options -d OPTS
complete -c cabal -l haskell-suite-options -d OPTS
complete -c cabal -l haskell-suite-pkg-options -d OPTS
complete -c cabal -l hmake-options -d OPTS
complete -c cabal -l hpc-options -d OPTS
complete -c cabal -l hsc2hs-options -d OPTS
complete -c cabal -l hscolour-options -d OPTS
complete -c cabal -l jhc-options -d OPTS
complete -c cabal -l ld-options -d OPTS
complete -c cabal -l pkg-config-options -d OPTS
complete -c cabal -l runghc-options -d OPTS
complete -c cabal -l strip-options -d OPTS
complete -c cabal -l tar-options -d OPTS
complete -c cabal -l uhc-options -d OPTS
complete -c cabal -l cabal-lib-version -d VERSION
complete -c cabal -l constraint -d CONSTRAINT
complete -c cabal -l preference -d CONSTRAINT
complete -c cabal -l allow-older -d '[ DEPS ]'
complete -c cabal -l allow-newer -d '[ DEPS ]'
complete -c cabal -l write-ghc-environment-files -d 'always|never|ghc8. 4. 4+'
complete -c cabal -l enable-documentation
complete -c cabal -l disable-documentation -d 'building of documentation'
complete -c cabal -l doc-index-file -d TEMPLATE
complete -c cabal -l reinstall
complete -c cabal -l no-reinstall -d 'Install even if it means installing the same version again'
complete -c cabal -l avoid-reinstalls
complete -c cabal -l no-avoid-reinstalls -d 'Do not select versions that would destructively overwrite installed packages'
complete -c cabal -l force-reinstalls
complete -c cabal -l no-force-reinstalls -d 'Reinstall packages even if they will most likely break other installed packag…'
complete -c cabal -l upgrade-dependencies
complete -c cabal -l no-upgrade-dependencies -d 'Pick the latest version for all dependencies, rather than trying to pick an i…'
complete -c cabal -l only-dependencies
complete -c cabal -l no-only-dependencies -d 'Install only the dependencies necessary to build the given packages'
complete -c cabal -l dependencies-only
complete -c cabal -l no-dependencies-only -d 'A synonym for --only-dependencies'
complete -c cabal -l root-cmd -d COMMAND
complete -c cabal -l symlink-bindir -d DIR
complete -c cabal -l build-summary -d TEMPLATE
complete -c cabal -l build-log -d TEMPLATE
complete -c cabal -l remote-build-reporting -d LEVEL
complete -c cabal -l report-planning-failure -d 'Generate build reports when the dependency solver fails'
complete -c cabal -l enable-per-component
complete -c cabal -l disable-per-component -d 'Per-component builds when possible'
complete -c cabal -l one-shot
complete -c cabal -l no-one-shot -d 'Do not record the packages in the world file'
complete -c cabal -l run-tests -d 'Run package test suites during installation'
complete -c cabal -s j -l jobs -d '[ NUM ]'
complete -c cabal -l keep-going -d 'After a build failure, continue to build other unaffected packages'
complete -c cabal -l offline
complete -c cabal -l no-offline -d 'Don\'t download packages from the Internet'
complete -c cabal -l only -d 'Only installs the package in the current directory'
complete -c cabal -l haddock-hoogle -d 'Generate a hoogle database'
complete -c cabal -l haddock-html -d 'Generate HTML documentation (the default)'
complete -c cabal -l haddock-html-location -d URL
complete -c cabal -l haddock-for-hackage
complete -c cabal -l haddock-executables -d 'Run haddock for Executables targets'
complete -c cabal -l haddock-tests -d 'Run haddock for Test Suite targets'
complete -c cabal -l haddock-benchmarks -d 'Run haddock for Benchmark targets'
complete -c cabal -l haddock-all -d 'Run haddock for all targets'
complete -c cabal -l haddock-internal -d 'Run haddock for internal modules and include all symbols'
complete -c cabal -l haddock-css -d PATH
complete -c cabal -l haddock-hyperlink-source -l haddock-hyperlink-sources -l haddock-hyperlinked-source -d 'Hyperlink the documentation to the source code'
complete -c cabal -l haddock-quickjump -d 'Generate an index for interactive documentation navigation'
complete -c cabal -l haddock-hscolour-css -d PATH
complete -c cabal -l haddock-contents-location -d URL
complete -c cabal -l test-log -d TEMPLATE
complete -c cabal -l test-machine-log -d TEMPLATE
complete -c cabal -l test-show-details -d FILTER
complete -c cabal -l test-keep-tix-files -d 'keep . tix files for HPC between test runs'
complete -c cabal -l test-wrapper -d FILE
complete -c cabal -l test-fail-when-no-test-suites -d 'Exit with failure when no test suites are found'
complete -c cabal -l test-options -d TEMPLATES
complete -c cabal -l test-option -d TEMPLATE
complete -c cabal -l benchmark-options -d TEMPLATES
complete -c cabal -l benchmark-option -d TEMPLATE
complete -c cabal -l only-configure
complete -c cabal -l no-only-configure -d 'Instead of performing a full build just run the configure step cabal new-build'
complete -c cabal -l repl-options -d FLAG
complete -c cabal -s b -l build-depends -d DEPENDENCY
complete -c cabal -l no-transitive-deps -d 'Don\'t automatically include transitive dependencies of requested packages'
complete -c cabal -s z -l ignore-project -d 'Only include explicitly specified packages (and \'base\').  cabal new-repl'
complete -c cabal -l installdir -d 'executables to be available globally, make sure that the PATH environment var…'
complete -c cabal -l package-env -l env -d ENV
complete -c cabal -l overwrite-policy -d always|never
complete -c cabal -l install-method -d copy|symlink
complete -c cabal -l save-config -d 'Save configuration, only remove build artifacts cabal new-clean'
complete -c cabal -l list-only -d 'Just list the sources, do not make a tarball'
complete -c cabal -l null-sep -d 'Separate the source files with NUL bytes rather than newlines'
complete -c cabal -l output-dir -l outputdir -d PATH
complete -c cabal -l reload -d 'Used from within an interpreter to update files'
complete -c cabal -l keep-temp-files -d 'Keep temporary files'
complete -c cabal -l hoogle -d 'Generate a hoogle database'
complete -c cabal -l html -d 'Generate HTML documentation (the default)'
complete -c cabal -l html-location -d URL
complete -c cabal -l for-hackage
complete -c cabal -l internal -d 'Run haddock for internal modules and include all symbols'
complete -c cabal -l hyperlink-source -l hyperlink-sources -l hyperlinked-source -d 'Hyperlink the documentation to the source code'
complete -c cabal -l quickjump -d 'Generate an index for interactive documentation navigation'
complete -c cabal -l hscolour-css -d PATH
complete -c cabal -l contents-location -d URL
complete -c cabal -l 'enable-tests`'
complete -c cabal -l log -d TEMPLATE
complete -c cabal -l machine-log -d TEMPLATE
complete -c cabal -l show-details -d FILTER
complete -c cabal -l keep-tix-files -d 'keep . tix files for HPC between test runs'
complete -c cabal -l fail-when-no-test-suites -d 'Exit with failure when no test suites are found'
complete -c cabal -l 'enable-benchmarks`'
complete -c cabal -l save-configure -d 'Do not remove the configuration file (dist/setup-config) during cleaning'
complete -c cabal -l list-sources -d FILE
complete -c cabal -l snapshot -d 'Produce a snapshot source distribution'
complete -c cabal -l output-directory -d DIR
complete -c cabal -l target-package-db -d DATABASE
complete -c cabal -l inplace -d 'register the package in the build location, so it can be used without being i…'
complete -c cabal -l gen-script -d 'instead of registering, generate a script to register later'
complete -c cabal -l gen-pkg-config -d '[ PKG ]'
complete -c cabal -l print-ipid -d 'print the installed package ID calculated for this package cabal v1-reconfigu…'
complete -c cabal -l sandbox -d DIR

