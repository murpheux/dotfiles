# oc-adm-catalog-build
# Autogenerated from man page /usr/lib/jvm/default/man/man1/oc-adm-catalog-build.1.gz
complete -c oc-adm-catalog-build -l appregistry-endpoint -d '[la]https://quay'
complete -c oc-adm-catalog-build -l appregistry-org -d '    Organization (Namespace) to pull from an application registry instance'
complete -c oc-adm-catalog-build -l auth-token -d '    Auth token for communicating with an application registry'
complete -c oc-adm-catalog-build -l dir -d '    The directory on disk that file:// images will be copied under'
complete -c oc-adm-catalog-build -l filter-by-os -d '    A regular expression to control which images are considered when multiple…'
complete -c oc-adm-catalog-build -l from -d '    The image to use as a base, or a reference to a release image'
complete -c oc-adm-catalog-build -l from-dir -d '    The directory on disk that file:// images will be read from'
complete -c oc-adm-catalog-build -l insecure -d '    Allow push and pull operations to registries to be made over HTTP'
complete -c oc-adm-catalog-build -l manifest-dir -d '    Local path to cache manifests when downloading'
complete -c oc-adm-catalog-build -l max-per-registry -d '    Number of concurrent requests allowed per registry'
complete -c oc-adm-catalog-build -s a -l registry-config -d '    Path to your registry credentials (defaults to  /. docker/config. json)'
complete -c oc-adm-catalog-build -l skip-verification -d '    Skip verifying the integrity of the retrieved content'
complete -c oc-adm-catalog-build -l to -d '    The image repository tag to apply to the built catalog image'
complete -c oc-adm-catalog-build -l to-db -d '    Local path to save the database to'
complete -c oc-adm-catalog-build -l as -d '    Username to impersonate for the operation'
complete -c oc-adm-catalog-build -l as-group -d '    Group to impersonate for the operation, this flag can be repeated to spec…'
complete -c oc-adm-catalog-build -l cache-dir -d '    Default cache directory'
complete -c oc-adm-catalog-build -l certificate-authority -d '    Path to a cert file for the certificate authority'
complete -c oc-adm-catalog-build -l client-certificate -d '    Path to a client certificate file for TLS'
complete -c oc-adm-catalog-build -l client-key -d '    Path to a client key file for TLS'
complete -c oc-adm-catalog-build -l cluster -d '    The name of the kubeconfig cluster to use'
complete -c oc-adm-catalog-build -l context -d '    The name of the kubeconfig context to use'
complete -c oc-adm-catalog-build -l insecure-skip-tls-verify -d '    If true, the server\'s certificate will not be checked for validity'
complete -c oc-adm-catalog-build -l kubeconfig -d '    Path to the kubeconfig file to use for CLI requests'
complete -c oc-adm-catalog-build -l match-server-version -d '    Require server version to match client version'
complete -c oc-adm-catalog-build -s n -l namespace -d '    If present, the namespace scope for this CLI request'
complete -c oc-adm-catalog-build -l request-timeout -d '    The length of time to wait before giving up on a single server request'
complete -c oc-adm-catalog-build -s s -l server -d '    The address and port of the Kubernetes API server'
complete -c oc-adm-catalog-build -l tls-server-name -d '    Server name to use for server certificate validation'
complete -c oc-adm-catalog-build -l token -d '    Bearer token for authentication to the API server'
complete -c oc-adm-catalog-build -l user -d '    The name of the kubeconfig user to use EXAMPLE   # Build an operator cata…'

