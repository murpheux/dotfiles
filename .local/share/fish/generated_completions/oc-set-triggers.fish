# oc-set-triggers
# Autogenerated from man page /usr/lib/jvm/default/man/man1/oc-set-triggers.1.gz
complete -c oc-set-triggers -l all -d '    If true, select all resources in the namespace of the specified resource …'
complete -c oc-set-triggers -l allow-missing-template-keys -d '    If true, ignore any errors in templates when a field or map key is missin…'
complete -c oc-set-triggers -l auto -d '    If true, enable all triggers, or just the specified trigger'
complete -c oc-set-triggers -s c -l containers -d '    Comma delimited list of container names this trigger applies to on deploy…'
complete -c oc-set-triggers -l dry-run -d '    Must be "none", "server", or "client"'
complete -c oc-set-triggers -s f -l filename -d '    Filename, directory, or URL to files to use to edit the resource'
complete -c oc-set-triggers -l from-bitbucket -d '    If true, a Bitbucket webhook - a secret value will be generated automatic…'
complete -c oc-set-triggers -l from-config -d '    If set, configuration changes will result in a change'
complete -c oc-set-triggers -l from-github -d '    If true, a GitHub webhook - a secret value will be generated automatically'
complete -c oc-set-triggers -l from-gitlab -d '    If true, a GitLab webhook - a secret value will be generated automatically'
complete -c oc-set-triggers -l from-image -d '    An image stream tag to trigger off of'
complete -c oc-set-triggers -l from-webhook -d '    If true, a generic webhook - a secret value will be generated automatical…'
complete -c oc-set-triggers -l from-webhook-allow-env -d '    If true, a generic webhook which can provide environment variables - a se…'
complete -c oc-set-triggers -s k -l kustomize -d '    Process the kustomization directory'
complete -c oc-set-triggers -l local -d '    If true, set image will NOT contact api-server but run locally'
complete -c oc-set-triggers -l manual -d '    If true, set all triggers to manual, or just the specified trigger'
complete -c oc-set-triggers -s o -l output -d '    Output format'
complete -c oc-set-triggers -s R -l recursive -d '    Process the directory used in -f, --filename recursively'
complete -c oc-set-triggers -l remove -d '    If true, remove the specified trigger(s)'
complete -c oc-set-triggers -l remove-all -d '    If true, remove all triggers'
complete -c oc-set-triggers -s l -l selector -d '    Selector (label query) to filter on'
complete -c oc-set-triggers -l template -d '    Template string or path to template file to use when -o=go-template, -o=g…'
complete -c oc-set-triggers -l as -d '    Username to impersonate for the operation'
complete -c oc-set-triggers -l as-group -d '    Group to impersonate for the operation, this flag can be repeated to spec…'
complete -c oc-set-triggers -l cache-dir -d '    Default cache directory'
complete -c oc-set-triggers -l certificate-authority -d '    Path to a cert file for the certificate authority'
complete -c oc-set-triggers -l client-certificate -d '    Path to a client certificate file for TLS'
complete -c oc-set-triggers -l client-key -d '    Path to a client key file for TLS'
complete -c oc-set-triggers -l cluster -d '    The name of the kubeconfig cluster to use'
complete -c oc-set-triggers -l context -d '    The name of the kubeconfig context to use'
complete -c oc-set-triggers -l insecure-skip-tls-verify -d '    If true, the server\'s certificate will not be checked for validity'
complete -c oc-set-triggers -l kubeconfig -d '    Path to the kubeconfig file to use for CLI requests'
complete -c oc-set-triggers -l match-server-version -d '    Require server version to match client version'
complete -c oc-set-triggers -s n -l namespace -d '    If present, the namespace scope for this CLI request'
complete -c oc-set-triggers -l request-timeout -d '    The length of time to wait before giving up on a single server request'
complete -c oc-set-triggers -s s -l server -d '    The address and port of the Kubernetes API server'
complete -c oc-set-triggers -l tls-server-name -d '    Server name to use for server certificate validation'
complete -c oc-set-triggers -l token -d '    Bearer token for authentication to the API server'
complete -c oc-set-triggers -l user -d '    The name of the kubeconfig user to use EXAMPLE   # Print the triggers on …'

