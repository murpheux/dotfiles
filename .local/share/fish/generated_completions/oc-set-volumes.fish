# oc-set-volumes
# Autogenerated from man page /usr/lib/jvm/default/man/man1/oc-set-volumes.1.gz
complete -c oc-set-volumes -l add -d '    If true, add volume and/or volume mounts for containers'
complete -c oc-set-volumes -l all -d '    If true, select all resources in the namespace of the specified resource …'
complete -c oc-set-volumes -l allow-missing-template-keys -d '    If true, ignore any errors in templates when a field or map key is missin…'
complete -c oc-set-volumes -l claim-class -d '    StorageClass to use for the persistent volume claim'
complete -c oc-set-volumes -l claim-mode -d '    Set the access mode of the claim to be created'
complete -c oc-set-volumes -l claim-name -d '    Persistent volume claim name'
complete -c oc-set-volumes -l claim-size -d '    If specified along with a persistent volume type, create a new claim with…'
complete -c oc-set-volumes -l configmap-name -d '    Name of the persisted config map'
complete -c oc-set-volumes -l confirm -d '    If true, confirm that you really want to remove multiple volumes'
complete -c oc-set-volumes -s c -l containers -d '    The names of containers in the selected pod templates to change - may use…'
complete -c oc-set-volumes -l default-mode -d '    The default mode bits to create files with.  Can be between 0000 and 0777'
complete -c oc-set-volumes -l dry-run -d '    Must be "none", "server", or "client"'
complete -c oc-set-volumes -s f -l filename -d '    Filename, directory, or URL to files to use to edit the resource'
complete -c oc-set-volumes -s k -l kustomize -d '    Process the kustomization directory'
complete -c oc-set-volumes -l local -d '    If true, set image will NOT contact api-server but run locally'
complete -c oc-set-volumes -s m -l mount-path -d '    Mount path inside the container.  Optional param for --add or --remove'
complete -c oc-set-volumes -l name -d '    Name of the volume.  If empty, auto generated for add operation'
complete -c oc-set-volumes -s o -l output -d '    Output format'
complete -c oc-set-volumes -l overwrite -d '    If true, replace existing volume source with the provided name and/or vol…'
complete -c oc-set-volumes -l path -d '    Host path.  Must be provided for hostPath volume type'
complete -c oc-set-volumes -l read-only -d '    Mount volume as ReadOnly.  Optional param for --add or --remove'
complete -c oc-set-volumes -s R -l recursive -d '    Process the directory used in -f, --filename recursively'
complete -c oc-set-volumes -l remove -d '    If true, remove volume and/or volume mounts for containers'
complete -c oc-set-volumes -l secret-name -d '    Name of the persisted secret.  Must be provided for secret volume type'
complete -c oc-set-volumes -s l -l selector -d '    Selector (label query) to filter on'
complete -c oc-set-volumes -l source -d '    Details of volume source as json string'
complete -c oc-set-volumes -l sub-path -d '    Path within the local volume from which the container\'s volume should be …'
complete -c oc-set-volumes -l template -d '    Template string or path to template file to use when -o=go-template, -o=g…'
complete -c oc-set-volumes -s t -l type -d '    Type of the volume source for add operation'
complete -c oc-set-volumes -l as -d '    Username to impersonate for the operation'
complete -c oc-set-volumes -l as-group -d '    Group to impersonate for the operation, this flag can be repeated to spec…'
complete -c oc-set-volumes -l cache-dir -d '    Default cache directory'
complete -c oc-set-volumes -l certificate-authority -d '    Path to a cert file for the certificate authority'
complete -c oc-set-volumes -l client-certificate -d '    Path to a client certificate file for TLS'
complete -c oc-set-volumes -l client-key -d '    Path to a client key file for TLS'
complete -c oc-set-volumes -l cluster -d '    The name of the kubeconfig cluster to use'
complete -c oc-set-volumes -l context -d '    The name of the kubeconfig context to use'
complete -c oc-set-volumes -l insecure-skip-tls-verify -d '    If true, the server\'s certificate will not be checked for validity'
complete -c oc-set-volumes -l kubeconfig -d '    Path to the kubeconfig file to use for CLI requests'
complete -c oc-set-volumes -l match-server-version -d '    Require server version to match client version'
complete -c oc-set-volumes -s n -l namespace -d '    If present, the namespace scope for this CLI request'
complete -c oc-set-volumes -l request-timeout -d '    The length of time to wait before giving up on a single server request'
complete -c oc-set-volumes -s s -l server -d '    The address and port of the Kubernetes API server'
complete -c oc-set-volumes -l tls-server-name -d '    Server name to use for server certificate validation'
complete -c oc-set-volumes -l token -d '    Bearer token for authentication to the API server'
complete -c oc-set-volumes -l user -d '    The name of the kubeconfig user to use EXAMPLE   # List volumes defined o…'

